name: start instance and container

on:
  # schedule:
  #   - cron: '30 4 * * 1-5' 
  workflow_dispatch:       

jobs:
  start:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      
      - name: Start EC2 instance
        run: aws ec2 start-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --region ${{ secrets.AWS_REGION }}
    

      - name: Wait for EC2 to be in running state
        run: |
          for i in {1..30}; do
            state=$(aws ec2 describe-instances \
              --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
              --region ${{ secrets.AWS_REGION }} \
              --query "Reservations[0].Instances[0].State.Name" \
              --output text)
            echo "EC2 state: $state"
            [ "$state" = "running" ] && break
            sleep 10
          done
    

      - name: Get EC2 public IP
        id: get_ip
        run: |
          IP=$(aws ec2 describe-instances \
            --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
            --region ${{ secrets.AWS_REGION }} \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "::add-mask::$IP"
          echo "ec2_ip=$IP" >> "$GITHUB_OUTPUT"
    

      - name: Start meme-gen-frontend container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.get_ip.outputs.ec2_ip }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull uzaifminfy/meme-gen-frontend

            docker ps -a --format '{{.Names}}' | grep -q '^meme-gen-frontend$' && \
              docker start meme-gen-frontend || \
              docker run -d --name meme-gen-frontend -p 80:80 uzaifminfy/meme-gen-frontend
