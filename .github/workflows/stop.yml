name: stop instance and container

on:
  schedule:
    - cron: '11 8 * * 1-5'  
  workflow_dispatch:        

jobs:
  stop:
    runs-on: ubuntu-latest

    steps:
      - name: Get EC2 public IP
        id: get_ip
        run: |
          IP=$(aws ec2 describe-instances \
            --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
            --region ${{ secrets.AWS_REGION }} \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "::add-mask::$IP"
          echo "ec2_ip=$IP" >> "$GITHUB_OUTPUT"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Wait for SSH port (22) to be ready
        run: |
          for i in {1..10}; do
            nc -zv ${{ steps.get_ip.outputs.ec2_ip }} 22 && break
            echo "Waiting for SSH on port 22..."
            sleep 10
          done

      - name: Stop Docker container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.get_ip.outputs.ec2_ip }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker ps --format '{{.Names}}' | grep -q '^meme-gen-frontend$' && \
              docker stop meme-gen-frontend || \
              echo "Container already stopped or not found"

      - name: Stop EC2 instance
        run: |
          aws ec2 stop-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
